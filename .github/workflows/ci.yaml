---

name: Continuous Integration

on:
  pull_request:
    types:
      - opened
      - reopened

jobs:
  Test:
    runs-on: ubuntu-latest

    container:
      image: elixir:1.13.3-slim

    services:
      redis: redis:alpine

      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: onepal_user
          POSTGRES_PASSWORD: onepal_pass

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install (os)
        run: apt-get update && apt-get install -y build-essential ca-certificates git libmcrypt-dev 

      - name: Install (mix)
        run: |
          mix local.rebar --force
          mix local.hex --force

      # - name: Cache
      #   uses: actions/cache@v4
      #   id: cache
      #   with:
      #     key: elixir-${{ hashFiles('Dockerfile', 'mix.lock') }}-${{ github.ref }}-test
      #     restore-keys: |
      #       elixir-${{ hashFiles('Dockerfile', 'mix.lock') }}-${{ github.ref }}-
      #       elixir-${{ hashFiles('Dockerfile', 'mix.lock') }}-
      #       elixir-
      #     path: |
      #       _build
      #       deps

      - name: Install (deps)
        if: steps.cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Compilation
        run: mix compile --force --warnings-as-errors

      - name: Test
        run: mix test
        env:
          DB_USERNAME: onepal_user
          DB_PASSWORD: onepal_pass
          DB_HOST: postgres
          REDIS_HOST: redis

  # Format:
  #   runs-on: ubuntu-latest
  #
  #   container:
  #     image: elixir:1.13.3-slim
  #
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         persist-credentials: false
  #
  #     - name: Install (os)
  #       run: apt-get update && apt-get install -y build-essential ca-certificates git libmcrypt-dev 
  #
  #     - name: Install (mix)
  #       run: |
  #         mix local.rebar --force
  #         mix local.hex --force
  #         mix deps.get
  #
  #     - name: Format
  #       run: mix format --check-formatted
  #
  # Credo:
  #   runs-on: ubuntu-latest
  #
  #   container:
  #     image: elixir:1.13.3-slim
  #
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         persist-credentials: false
  #
  #     - name: Install (os)
  #       run: apt-get update && apt-get install -y build-essential ca-certificates git libmcrypt-dev 
  #
  #     - name: Install (mix)
  #       run: |
  #         mix local.rebar --force
  #         mix local.hex --force
  #
  #     - name: Cache
  #       uses: actions/cache@v4
  #       id: cache
  #       with:
  #         key: elixir-${{ hashFiles('Dockerfile', 'mix.lock') }}-${{ github.ref }}-credo
  #         restore-keys: |
  #           elixir-${{ hashFiles('Dockerfile', 'mix.lock') }}-${{ github.ref }}-
  #           elixir-${{ hashFiles('Dockerfile', 'mix.lock') }}-
  #           elixir-
  #         path: |
  #           _build
  #           deps
  #
  #     - name: Install (deps)
  #       if: steps.cache.outputs.cache-hit != 'true'
  #       run: mix deps.get
  #
  #     - name: Credo
  #       run: mix credo
